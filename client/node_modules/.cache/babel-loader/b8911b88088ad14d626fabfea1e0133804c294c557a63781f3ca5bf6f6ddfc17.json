{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS ZEN BOOK\\\\Desktop\\\\MovafitBooking\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const checkAuthStatus = async () => {\n    try {\n      // Get user data from localStorage instead of fetching all users\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (phone, password) => {\n    try {\n      const response = await fetch('https://movafit-booking-server.vercel.app/api/users/authenticateUser', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phone,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const userData = data.user;\n        const user = {\n          _id: userData._id,\n          fullName: userData.fullName,\n          phone: userData.phone,\n          gender: userData.gender,\n          weight: userData.weight,\n          measurements: userData.measurements,\n          isAdmin: userData.isAdmin,\n          createdAt: userData.createdAt\n        };\n\n        // Store user data in localStorage\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        const token = 'auth-token-' + Date.now();\n        localStorage.setItem('token', token);\n        setToken(token);\n        toast.success('התחברת בהצלחה!');\n        return true;\n      } else {\n        toast.error('מספר טלפון או סיסמה שגויים');\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('שגיאה בהתחברות');\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock registration\n      const mockUser = {\n        _id: Date.now().toString(),\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        email: userData.email,\n        phone: userData.phone,\n        gender: userData.gender,\n        role: 'user'\n      };\n      const mockToken = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem('token', mockToken);\n      setToken(mockToken);\n      setUser(mockUser);\n      toast.success('נרשמת בהצלחה!');\n      return true;\n    } catch (error) {\n      toast.error('שגיאה בהרשמה');\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    toast.success('התנתקת בהצלחה');\n  };\n  const updateProfile = async updatedData => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Update user with new data\n      setUser(prev => ({\n        ...prev,\n        ...updatedData\n      }));\n      toast.success('הפרופיל עודכן בהצלחה!');\n      return true;\n    } catch (error) {\n      toast.error('שגיאה בעדכון הפרופיל');\n      return false;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuthStatus","storedUser","userData","JSON","parse","error","console","removeItem","login","phone","password","response","fetch","method","headers","body","stringify","ok","data","json","_id","fullName","gender","weight","measurements","isAdmin","createdAt","setItem","Date","now","success","register","Promise","resolve","setTimeout","mockUser","toString","firstName","lastName","email","role","mockToken","logout","updateProfile","updatedData","prev","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS ZEN BOOK/Desktop/MovafitBooking/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      checkAuthStatus();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      // Get user data from localStorage instead of fetching all users\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        const userData = JSON.parse(storedUser);\r\n        setUser(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check error:', error);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setToken(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (phone, password) => {\r\n    try {\r\n      const response = await fetch('https://movafit-booking-server.vercel.app/api/users/authenticateUser', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ phone, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const userData = data.user;\r\n        \r\n        const user = {\r\n          _id: userData._id,\r\n          fullName: userData.fullName,\r\n          phone: userData.phone,\r\n          gender: userData.gender,\r\n          weight: userData.weight,\r\n          measurements: userData.measurements,\r\n          isAdmin: userData.isAdmin,\r\n          createdAt: userData.createdAt\r\n        };\r\n        \r\n        // Store user data in localStorage\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        setUser(user);\r\n        \r\n        const token = 'auth-token-' + Date.now();\r\n        localStorage.setItem('token', token);\r\n        setToken(token);\r\n        toast.success('התחברת בהצלחה!');\r\n        return true;\r\n      } else {\r\n        toast.error('מספר טלפון או סיסמה שגויים');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error('שגיאה בהתחברות');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock registration\r\n      const mockUser = {\r\n        _id: Date.now().toString(),\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        email: userData.email,\r\n        phone: userData.phone,\r\n        gender: userData.gender,\r\n        role: 'user'\r\n      };\r\n      \r\n      const mockToken = 'mock-jwt-token-' + Date.now();\r\n      localStorage.setItem('token', mockToken);\r\n      setToken(mockToken);\r\n      setUser(mockUser);\r\n      toast.success('נרשמת בהצלחה!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('שגיאה בהרשמה');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    toast.success('התנתקת בהצלחה');\r\n  };\r\n\r\n  const updateProfile = async (updatedData) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Update user with new data\r\n      setUser(prev => ({ ...prev, ...updatedData }));\r\n      toast.success('הפרופיל עודכן בהצלחה!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('שגיאה בעדכון הפרופיל');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
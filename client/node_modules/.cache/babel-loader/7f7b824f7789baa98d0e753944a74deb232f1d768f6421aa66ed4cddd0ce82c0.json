{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS ZEN BOOK\\\\Desktop\\\\MovafitBooking\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await fetch('https://movafit-booking-server.vercel.app/api/users/getAllUsers');\n      if (response.ok) {\n        const data = await response.json();\n        // For now, use the first user as demo - later we'll implement proper token-based auth\n        if (data.users && data.users.length > 0) {\n          const userData = data.users[0];\n          setUser({\n            _id: userData._id,\n            fullName: userData.fullName,\n            phone: userData.phone,\n            gender: userData.gender,\n            weight: userData.weight,\n            measurements: userData.measurements,\n            isAdmin: userData.isAdmin,\n            createdAt: userData.createdAt\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (phone, password) => {\n    try {\n      const response = await fetch('https://movafit-booking-server.vercel.app/api/users/authenticateUser', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phone,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const userData = data.user;\n        setUser({\n          _id: userData._id,\n          fullName: userData.fullName,\n          phone: userData.phone,\n          gender: userData.gender,\n          weight: userData.weight,\n          measurements: userData.measurements,\n          isAdmin: userData.isAdmin,\n          createdAt: userData.createdAt\n        });\n        const token = 'auth-token-' + Date.now();\n        localStorage.setItem('token', token);\n        setToken(token);\n        toast.success('התחברת בהצלחה!');\n        return true;\n      } else {\n        toast.error('מספר טלפון או סיסמה שגויים');\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('שגיאה בהתחברות');\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock registration\n      const mockUser = {\n        _id: Date.now().toString(),\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        email: userData.email,\n        phone: userData.phone,\n        gender: userData.gender,\n        role: 'user'\n      };\n      const mockToken = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem('token', mockToken);\n      setToken(mockToken);\n      setUser(mockUser);\n      toast.success('נרשמת בהצלחה!');\n      return true;\n    } catch (error) {\n      toast.error('שגיאה בהרשמה');\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    toast.success('התנתקת בהצלחה');\n  };\n  const updateProfile = async updatedData => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Update user with new data\n      setUser(prev => ({\n        ...prev,\n        ...updatedData\n      }));\n      toast.success('הפרופיל עודכן בהצלחה!');\n      return true;\n    } catch (error) {\n      toast.error('שגיאה בעדכון הפרופיל');\n      return false;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuthStatus","response","fetch","ok","data","json","users","length","userData","_id","fullName","phone","gender","weight","measurements","isAdmin","createdAt","error","console","removeItem","login","password","method","headers","body","JSON","stringify","Date","now","setItem","success","register","Promise","resolve","setTimeout","mockUser","toString","firstName","lastName","email","role","mockToken","logout","updateProfile","updatedData","prev","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS ZEN BOOK/Desktop/MovafitBooking/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      checkAuthStatus();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const response = await fetch('https://movafit-booking-server.vercel.app/api/users/getAllUsers');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // For now, use the first user as demo - later we'll implement proper token-based auth\r\n        if (data.users && data.users.length > 0) {\r\n          const userData = data.users[0];\r\n          setUser({\r\n            _id: userData._id,\r\n            fullName: userData.fullName,\r\n            phone: userData.phone,\r\n            gender: userData.gender,\r\n            weight: userData.weight,\r\n            measurements: userData.measurements,\r\n            isAdmin: userData.isAdmin,\r\n            createdAt: userData.createdAt\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check error:', error);\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (phone, password) => {\r\n    try {\r\n      const response = await fetch('https://movafit-booking-server.vercel.app/api/users/authenticateUser', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ phone, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const userData = data.user;\r\n        \r\n        setUser({\r\n          _id: userData._id,\r\n          fullName: userData.fullName,\r\n          phone: userData.phone,\r\n          gender: userData.gender,\r\n          weight: userData.weight,\r\n          measurements: userData.measurements,\r\n          isAdmin: userData.isAdmin,\r\n          createdAt: userData.createdAt\r\n        });\r\n        \r\n        const token = 'auth-token-' + Date.now();\r\n        localStorage.setItem('token', token);\r\n        setToken(token);\r\n        toast.success('התחברת בהצלחה!');\r\n        return true;\r\n      } else {\r\n        toast.error('מספר טלפון או סיסמה שגויים');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error('שגיאה בהתחברות');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock registration\r\n      const mockUser = {\r\n        _id: Date.now().toString(),\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        email: userData.email,\r\n        phone: userData.phone,\r\n        gender: userData.gender,\r\n        role: 'user'\r\n      };\r\n      \r\n      const mockToken = 'mock-jwt-token-' + Date.now();\r\n      localStorage.setItem('token', mockToken);\r\n      setToken(mockToken);\r\n      setUser(mockUser);\r\n      toast.success('נרשמת בהצלחה!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('שגיאה בהרשמה');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    toast.success('התנתקת בהצלחה');\r\n  };\r\n\r\n  const updateProfile = async (updatedData) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Update user with new data\r\n      setUser(prev => ({ ...prev, ...updatedData }));\r\n      toast.success('הפרופיל עודכן בהצלחה!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('שגיאה בעדכון הפרופיל');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
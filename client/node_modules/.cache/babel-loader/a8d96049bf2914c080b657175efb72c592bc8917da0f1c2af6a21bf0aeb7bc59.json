{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS ZEN BOOK\\\\Desktop\\\\MovafitBooking\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const checkAuthStatus = async () => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Mock user data for demo\n      const mockUser = {\n        _id: '1',\n        firstName: 'פאדי',\n        lastName: 'גאבר',\n        email: 'demo@example.com',\n        phone: '0501111111',\n        gender: 'male',\n        role: 'user'\n      };\n      setUser(mockUser);\n    } catch (error) {\n      localStorage.removeItem('token');\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock login - accept any email/password for demo\n      const mockUser = {\n        _id: '1',\n        firstName: 'פאדי',\n        lastName: 'גאבר',\n        email: email,\n        phone: '0501111111',\n        gender: 'male',\n        role: 'user'\n      };\n      const mockToken = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem('token', mockToken);\n      setToken(mockToken);\n      setUser(mockUser);\n      toast.success('התחברת בהצלחה!');\n      return true;\n    } catch (error) {\n      toast.error('שגיאה בהתחברות');\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock registration\n      const mockUser = {\n        _id: Date.now().toString(),\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        email: userData.email,\n        phone: userData.phone,\n        gender: userData.gender,\n        role: 'user'\n      };\n      const mockToken = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem('token', mockToken);\n      setToken(mockToken);\n      setUser(mockUser);\n      toast.success('נרשמת בהצלחה!');\n      return true;\n    } catch (error) {\n      toast.error('שגיאה בהרשמה');\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    toast.success('התנתקת בהצלחה');\n  };\n  const updateProfile = async updatedData => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Update user with new data\n      setUser(prev => ({\n        ...prev,\n        ...updatedData\n      }));\n      toast.success('הפרופיל עודכן בהצלחה!');\n      return true;\n    } catch (error) {\n      toast.error('שגיאה בעדכון הפרופיל');\n      return false;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuthStatus","Promise","resolve","setTimeout","mockUser","_id","firstName","lastName","email","phone","gender","role","error","removeItem","login","password","mockToken","Date","now","setItem","success","register","userData","toString","logout","updateProfile","updatedData","prev","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS ZEN BOOK/Desktop/MovafitBooking/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      checkAuthStatus();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Mock user data for demo\r\n      const mockUser = {\r\n        _id: '1',\r\n        firstName: 'פאדי',\r\n        lastName: 'גאבר',\r\n        email: 'demo@example.com',\r\n        phone: '0501111111',\r\n        gender: 'male',\r\n        role: 'user'\r\n      };\r\n      setUser(mockUser);\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock login - accept any email/password for demo\r\n      const mockUser = {\r\n        _id: '1',\r\n        firstName: 'פאדי',\r\n        lastName: 'גאבר',\r\n        email: email,\r\n        phone: '0501111111',\r\n        gender: 'male',\r\n        role: 'user'\r\n      };\r\n      \r\n      const mockToken = 'mock-jwt-token-' + Date.now();\r\n      localStorage.setItem('token', mockToken);\r\n      setToken(mockToken);\r\n      setUser(mockUser);\r\n      toast.success('התחברת בהצלחה!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('שגיאה בהתחברות');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock registration\r\n      const mockUser = {\r\n        _id: Date.now().toString(),\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        email: userData.email,\r\n        phone: userData.phone,\r\n        gender: userData.gender,\r\n        role: 'user'\r\n      };\r\n      \r\n      const mockToken = 'mock-jwt-token-' + Date.now();\r\n      localStorage.setItem('token', mockToken);\r\n      setToken(mockToken);\r\n      setUser(mockUser);\r\n      toast.success('נרשמת בהצלחה!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('שגיאה בהרשמה');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    toast.success('התנתקת בהצלחה');\r\n  };\r\n\r\n  const updateProfile = async (updatedData) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Update user with new data\r\n      setUser(prev => ({ ...prev, ...updatedData }));\r\n      toast.success('הפרופיל עודכן בהצלחה!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('שגיאה בעדכון הפרופיל');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}